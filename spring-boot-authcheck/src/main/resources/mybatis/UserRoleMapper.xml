<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fleet.authcheck.dao.UserRoleDao">
    <resultMap id="BaseResultMap" type="com.fleet.authcheck.entity.UserRole">
        <result column="user_id" property="userId"/>
        <result column="role_id" property="roleId"/>
    </resultMap>

    <sql id="Base_Column_List">
		`user_id`, `role_id`
	</sql>

    <insert id="insert" parameterType="com.fleet.authcheck.entity.UserRole">
		insert into `user_role`(`user_id`, `role_id`) values (#{userId}, #{roleId})
		ON DUPLICATE KEY UPDATE `user_id` = #{userId}, `role_id` = #{roleId}
	</insert>

    <delete id="delete" parameterType="com.fleet.authcheck.entity.UserRole">
        delete from `user_role`
        <where>
            <if test="userId != null">
                and `user_id` = #{userId}
            </if>
            <if test="roleId != null">
                and `role_id` = #{roleId}
            </if>
        </where>
    </delete>

    <update id="update" parameterType="com.fleet.authcheck.entity.UserRole">
		insert into `user_role`(`user_id`, `role_id`) values (#{userId}, #{roleId})
		ON DUPLICATE KEY UPDATE `user_id` = #{userId}, `role_id` = #{roleId}
	</update>

    <select id="get" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `user_role`
        <where>
            <if test="userId != null">
                and `user_id` = #{userId}
            </if>
            <if test="roleId != null">
                and `role_id` = #{roleId}
            </if>
        </where>
        limit 1
    </select>

    <select id="list" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `user_role`
        <where>
            <if test="userId != null">
                and `user_id` = #{userId}
            </if>
            <if test="roleId != null">
                and `role_id` = #{roleId}
            </if>
        </where>
    </select>

    <select id="roleList" parameterType="java.lang.Integer" resultType="java.lang.String">
		select r.`name`
		from `user_role` as ur
		left join `role` as r on r.id = ur.role_id
		where ur.user_id = #{userId} and r.id is not null
	</select>

    <select id="permitList" parameterType="java.lang.Integer" resultType="java.lang.String">
		select p.`code`
		from `user_role` as ur
		left join `role_permit` as rp on ur.role_id = rp.role_id
		left join `permit` as p on rp.permit_id = p.id
		where ur.user_id = #{userId} and p.id is not null
	</select>
</mapper>

